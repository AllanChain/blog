---
import 'highlight.js/styles/atom-one-dark.css'

import BaseLayout from '@/layouts/BaseLayout.astro'
import { prefixLink } from '@/utils'
import PostMain from '@components/PostMain.astro'
import dataPromise from '@data'
import type { BlogPost } from '@data/types'

export interface Props {
  post: BlogPost
  seriesPosts: BlogPost[]
}

export async function getStaticPaths() {
  const { posts } = await dataPromise
  return posts.flatMap((post) => {
    const seriesLabelId = post.labels.find((label) => label.type === 'series')?.id

    return {
      params: {
        slug: post.slug,
      },
      props: {
        post,
        seriesPosts: posts
          .filter((p) => p.labels.findIndex((l) => l.id === seriesLabelId) !== -1)
          .sort((a, b) => a.createdAt.getTime() - b.createdAt.getTime()),
      } as Props,
    }
  })
}

const { post, seriesPosts } = Astro.props as Props
---

<BaseLayout title={post.title.length > 50 ? post.title : `${post.title} - AC Dustbin`}>
  <Fragment slot="head">
    {
      post.body.includes('katex') && (
        <link
          rel="stylesheet"
          href="https://fastly.jsdelivr.net/npm/katex@0.15.6/dist/katex.min.css"
          integrity="sha256-J+iAE0sgH8QSz9hpcDxXIftnj65JEZgNhGcgReTTK9s="
          crossorigin="anonymous"
        />
      )
    }
    <meta name="description" content={post.summaryText} />
    <meta name="issue-url" content={post.url} />
    <meta property="og:title" content={post.title} />
    <meta property="og:type" content="article" />
    <meta property="og:url" content={Astro.url} />
    <meta
      property="og:image"
      content={post.image?.src ?? new URL(prefixLink('og-large.png'), Astro.url)}
    />
  </Fragment>
  <PostMain post={post} seriesPosts={seriesPosts} />
</BaseLayout>

<script>
  document.addEventListener('keypress', (e) => {
    if (e.key === 'e') {
      const metaTag = document.querySelector(
        'meta[name="issue-url"]',
      ) as HTMLMetaElement
      location.href = metaTag.content
    }
  })
</script>
