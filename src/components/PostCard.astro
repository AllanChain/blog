---
import { BlogPost } from '@data/types'
import LQIP from './LQIP.svelte'
import PostLabel from './PostLabel.vue'
import PostDate from './PostDate.vue'
import { postLink } from '@/utils'

export interface Props {
  post: BlogPost
}

const { post } = Astro.props as Props

const uncommonLabel = post.labels.reduce((previous, current) =>
  current.logo && previous.reference > current.reference ? current : previous
)
---

<div overflow-hidden border='rounded-md' shadow-md bg-white>
  {post.image && (
    <div>
      <LQIP
        client:visible
        src={post.image.src}
        lazySrc={post.image.lazySrc}
        width={post.image.width}
        height={post.image.height}
        alt="Header"
        w-full
      />
    </div>
  )}
  <div px-4>
    <h3 class='post-card-title'>
      <a href={postLink(post.slug)}> {post.title}</a>
    </h3>
    <PostDate createdAt={post.createdAt} lastEditedAt={post.lastEditedAt} />

    {!post.image && uncommonLabel && (
      <div
        w-15
        h-15
        p-1
        m-2
        float-right
        border-2
        overflow-hidden
        rounded-full
        flex
        items-center
        style={`border-color: #${uncommonLabel.color}`}
      >
        <LQIP
          client:visible
          src={uncommonLabel.logo.src}
          lazySrc={uncommonLabel.logo.lazySrc}
          width={uncommonLabel.logo.width}
          height={uncommonLabel.logo.height}
          alt="Label Image"
        />
      </div>
    )}
    <div>
      {post.labels.map((label) => <PostLabel label={label} />)}
    </div>
    {post.summary ? (
      <div class="markdown-body" set:html="post.summary" text="sm gray-800" />
    ) : (
      <div v-else text="sm gray-600">
        <p>
          <i>There is no summary for this post.</i>
        </p>
      </div>
    )}
  </div>
</div>

<style lang='scss'>
  .post-card-title {
    display: -webkit-box;
    overflow: hidden;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    a {
      color: currentColor;
      text-decoration: none;
      &:hover {
        text-decoration: dashed underline #888888;
      }
    }
  }
</style>
