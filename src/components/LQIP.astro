---
export interface Props {
  src: string
  lazySrc: string
  width: number
  height: number
  alt?: string
  class?: string
}

const props = Astro.props
const { src, lazySrc, width, height, alt } = props
---

<div
  class={`lqip blur ${props.class}`}
  style={`aspect-ratio: ${width} / ${height}; background-image: url(${lazySrc})`}
>
  <img
    src={src}
    alt={alt}
    width={width}
    height={height}
    onload="this.parentNode.classList.remove('blur')"
  />
</div>

<script>
  if (import.meta.env.DEV) {
    setInterval(() => {
      for (const image of document.querySelectorAll<HTMLImageElement>(
        'div.blur > img'
      )) {
        if (image.complete) {
          image.parentElement.classList.remove('blur')
        }
      }
    }, 5000)
  }
</script>

<style is:global>
  div.lqip {
    position: relative;
    width: 100%;
    overflow: hidden;
    background-size: 0 0;
    background-repeat: no-repeat;
    display: inline-block;
    transition: opacity 1s ease-in-out;
  }

  div.lqip::after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: 0;
    transition: inherit;
    z-index: 1;
    background-image: inherit;
    background-size: cover;
    background-repeat: no-repeat;
  }

  .lqip.blur::after {
    opacity: 1;
  }

  .lqip.blur img {
    opacity: 0;
  }

  .lqip img {
    transition: inherit;
    display: block;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
</style>
