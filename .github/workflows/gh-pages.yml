name: Build and Deploy to gh-pages

on:
  push:
    branches:
      - astro
    tags-ignore:
      - "**"
  issues:
    types: [opened, edited]
  workflow_dispatch:
  schedule:
    - cron: "30 11 * * 5"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  issues: read

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Build the Pages
    runs-on: ubuntu-latest
    # The sender must be me. And if it's an issue, must contain such label.
    if: >
      github.event_name == 'schedule' ||
      github.event.sender.login == 'AllanChain' &&
      (!github.event.issue || contains(github.event.issue.labels.*.name, '@post'))
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: pnpm/action-setup@v2.4.0
        with:
          version: 8.1.0
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            public/img/
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Build App
        run: |
          pnpm install
          pnpm build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./dist

  deploy:
    name: Deploy the Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
