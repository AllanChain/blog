name: Build and Deploy to gh-pages

on:
  push:
    branches:
      - astro
    tags-ignore:
      - "**"
  issues:
    types: [opened, edited]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  issues: read

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Build the Pages
    runs-on: ubuntu-latest
    if: >
      (contains(github.event.issue.labels.*.name, '@post') &&
      github.event.sender.login == 'AllanChain') ||
      github.event.pusher.name == 'AllanChain'
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "18.x"
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.4.0
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - uses: actions/cache@v3
        name: Setup cache
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
            public/img/
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Build App
        run: |
          pnpm install
          pnpm build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist

  deploy:
    name: Deploy the Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
